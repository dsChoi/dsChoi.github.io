<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>python on my name is Stones</title>
    <link>https://example.com/tags/python/</link>
    <description>Recent content in python on my name is Stones</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 08 Feb 2021 17:21:08 +0900</lastBuildDate><atom:link href="https://example.com/tags/python/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>2 리스트와 딕셔너리 (better way 11 ~ 14)</title>
      <link>https://example.com/posts/effectivepython_03/</link>
      <pubDate>Mon, 08 Feb 2021 17:21:08 +0900</pubDate>
      
      <guid>https://example.com/posts/effectivepython_03/</guid>
      <description>2 리스트와 딕셔너리 (better way 11 ~ 14)&amp;nbsp;¶ Better way 11. 시퀀스를 슬라이싱하는 방법을 익혀라.&amp;nbsp;¶   시퀀스를 여러조각(슬라이스(slice))으로 나누는 슬라이싱 구문이 있다.
a = [&amp;#39;a&amp;#39;, &amp;#39;b&amp;#39;,&amp;#39;c&amp;#39;, &amp;#39;d&amp;#39;, &amp;#39;e&amp;#39;, &amp;#39;f&amp;#39;, &amp;#39;g&amp;#39;, &amp;#39;h&amp;#39;] print(&amp;#39;가운데 2개:&amp;#39; , a[3:5]) print(&amp;#39;마지막을 제외한 나머지:&amp;#39;, a[1:7]) &amp;gt;&amp;gt; 가운데 2개 : [&amp;#39;d&amp;#39;, &amp;#39;e&amp;#39;] &amp;gt;&amp;gt; 마지막을 제외한 나머지: [&amp;#39;b&amp;#39;,&amp;#39;c&amp;#39;, &amp;#39;d&amp;#39;, &amp;#39;e&amp;#39;, &amp;#39;f&amp;#39;, &amp;#39;g&amp;#39;]   리스트의 맨 앞부터 슬라이싱할 때는 시각적 잡음을 없애기 위해 0을 생략하라
assert a[:5] == a[0:5]   리스트의 끝까지 슬라이싱할 때는 쓸데없이 끝 인덱스를 적지말라.</description>
    </item>
    
    <item>
      <title>1. 파이썬 답게 생각하기 (better way 6 ~ 10)</title>
      <link>https://example.com/posts/effectivepython_02/</link>
      <pubDate>Tue, 02 Feb 2021 14:34:59 +0900</pubDate>
      
      <guid>https://example.com/posts/effectivepython_02/</guid>
      <description>1. 파이썬 답게 생각하기 (better way 6 ~ 10)&amp;nbsp;¶ Better way 6 . 인덱스를 사용하는 대신 대입을 사용해 데이터를 언패킹하라&amp;nbsp;¶ snacks = [(&amp;#39;베이컨&amp;#39;, 350), (&amp;#39;도넛&amp;#39;,240), (&amp;#39;머핀&amp;#39;,190)] // 예제1. for i in range(len(snacks)) : item = snacks[i] name = item[0] calories = item[1] printf(f&amp;#39;#{i+1}: {name} 은 {calroies} 칼로리입니다.&amp;#39;) //예제 2. for rank, (name, calories) in enumerate(snacks, 1): printf(f&amp;#39;#{rank}: {name} 은 {calroies} 칼로리입니다.&amp;#39;)  기억해야 할 내용
 파이썬은 한 문장 안에서 여러 값을 대입할 수 있는 언패킹이라는 특별한 문법을 제공한다.</description>
    </item>
    
    <item>
      <title>1. 파이썬 답게 생각하기 (better way 1 ~ 5)</title>
      <link>https://example.com/posts/effectivepython_01/</link>
      <pubDate>Fri, 29 Jan 2021 14:34:59 +0900</pubDate>
      
      <guid>https://example.com/posts/effectivepython_01/</guid>
      <description>1. 파이썬 답게 생각하기 (better way 1 ~ 5)&amp;nbsp;¶ Better way 1 . 사용중인 파이썬의 버전을 알아두라&amp;nbsp;¶ 파이썬 버전 확인
2 버전
python --version Python 2.7.10 3 버전
python3 --version Python 3.8.0  기억해야 할 내용
 파이썬 3는 파이썬 최신 버전이며 현재 가장 잘 지원되고 있다. 따라서 프로젝트에서 파이썬 3을 써야 한다. 여러분의 시스템에 있는 파이썬 실행 파일이 여러분이 원하는 버전인지 확인하라. 파이썬 2는 사용하지 말라. 2020년 1월 1일 부터 파이썬 2는 더이상 지원하지 않는다.</description>
    </item>
    
  </channel>
</rss>
